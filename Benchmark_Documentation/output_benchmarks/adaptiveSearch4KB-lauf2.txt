rm -f main
rm -f main-optimized
cd btree_template; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_template'
rm -f btree_template.o btree_template.a btree-optimized_template.o btree-optimized_template.a btreenode_template.o btreenode-optimized_template.o utils_template.o utils-optimized_template.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_template'
cd btree_template_bigNode; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_template_bigNode'
rm -f btree_templateBig.o btree_templateBig.a btree-optimized_templateBig.o btree-optimized_templateBig.a btreenode_templateBig.o btreenode-optimized_templateBig.o utils_templateBig.o utils-optimized_templateBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_template_bigNode'
cd btree_plain_finished; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_plain_finished'
rm -f btree_finished.o btree_finished.a btree-optimized_finished.o btree-optimized_finished.a
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_plain_finished'
cd btree_binarySearch_noPrefix; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_noPrefix'
rm -f btree_binarySearchNoPrefix.o btree_binarySearchNoPrefix.a btree-optimized_binarySearchNoPrefix.o btree-optimized_binarySearchNoPrefix.a btreenode_binarySearchNoPrefix.o btreenode-optimized_binarySearchNoPrefix.o utils_binarySearchNoPrefix.o utils-optimized_binarySearchNoPrefix.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_noPrefix'
cd btree_binarySearch; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch'
rm -f btree_binarySearch.o btree_binarySearch.a btree-optimized_binarySearch.o btree-optimized_binarySearch.a btreenode_binarySearch.o btreenode-optimized_binarySearch.o utils_binarySearch.o utils-optimized_binarySearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch'
cd btree_binarySearch_bigNode; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_bigNode'
rm -f btree_binarySearchBig.o btree_binarySearchBig.a btree-optimized_binarySearchBig.o btree-optimized_binarySearchBig.a btreenode_binarySearchBig.o btreenode-optimized_binarySearchBig.o utils_binarySearchBig.o utils-optimized_binarySearchBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_bigNode'
cd btree_binarySearch_withHints; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_withHints'
rm -f btree_binarySearchHints.o btree_binarySearchHints.a btree-optimized_binarySearchHints.o btree-optimized_binarySearchHints.a btreenode_binarySearchHints.o btreenode-optimized_binarySearchHints.o utils_binarySearchHints.o utils-optimized_binarySearchHints.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_withHints'
cd btree_linearSearch; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_linearSearch'
rm -f btree_linearSearch.o btree_linearSearch.a btree-optimized_linearSearch.o btree-optimized_linearSearch.a btreenode_linearSearch.o btreenode-optimized_linearSearch.o utils_linearSearch.o utils-optimized_linearSearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_linearSearch'
cd btree_linearSearch_bigNode; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_linearSearch_bigNode'
rm -f btree_linearSearchBig.o btree_linearSearchBig.a btree-optimized_linearSearchBig.o btree-optimized_linearSearchBig.a btreenode_linearSearchBig.o btreenode-optimized_linearSearchBig.o utils_linearSearchBig.o utils-optimized_linearSearchBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_linearSearch_bigNode'
cd btree_interpolationSearch; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch'
rm -f btree_interpolationSearch.o btree_interpolationSearch.a btree-optimized_interpolationSearch.o btree-optimized_interpolationSearch.a btreenode_interpolationSearch.o btreenode-optimized_interpolationSearch.o utils_interpolationSearch.o utils-optimized_interpolationSearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch'
cd btree_interpolationSearch_bigNode; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_bigNode'
rm -f btree_interpolationSearchBig.o btree_interpolationSearchBig.a btree-optimized_interpolationSearchBig.o btree-optimized_interpolationSearchBig.a btreenode_interpolationSearchBig.o btreenode-optimized_interpolationSearchBig.o utils_interpolationSearchBig.o utils-optimized_interpolationSearchBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_bigNode'
cd btree_interpolationSearch_withKeyHeads; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_withKeyHeads'
rm -f btree_interpolationSearchKeyHeads.o btree_interpolationSearchKeyHeads.a btree-optimized_interpolationSearchKeyHeads.o btree-optimized_interpolationSearchKeyHeads.a btreenode_interpolationSearchKeyHeads.o btreenode-optimized_interpolationSearchKeyHeads.o utils_interpolationSearchKeyHeads.o utils-optimized_interpolationSearchKeyHeads.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_withKeyHeads'
cd btree_interpolationSearch_withKeyHeads_bigNode; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_withKeyHeads_bigNode'
rm -f btree_interpolationSearchKeyHeadsBig.o btree_interpolationSearchKeyHeadsBig.a btree-optimized_interpolationSearchKeyHeadsBig.o btree-optimized_interpolationSearchKeyHeadsBig.a btreenode_interpolationSearchKeyHeadsBig.o btreenode-optimized_interpolationSearchKeyHeadsBig.o utils_interpolationSearchKeyHeadsBig.o utils-optimized_interpolationSearchKeyHeadsBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_withKeyHeads_bigNode'
cd btree_adaptiveSearch; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_adaptiveSearch'
rm -f btree_adaptiveSearch.o btree_adaptiveSearch.a btree-optimized_adaptiveSearch.o btree-optimized_adaptiveSearch.a btreenode_adaptiveSearch.o btreenode-optimized_adaptiveSearch.o utils_adaptiveSearch.o utils-optimized_adaptiveSearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_adaptiveSearch'
cd btree_interpolatedBinarySearch; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolatedBinarySearch'
rm -f btree_interpolatedBinarySearch.o btree_interpolatedBinarySearch.a btree-optimized_interpolatedBinarySearch.o btree-optimized_interpolatedBinarySearch.a btreenode_interpolatedBinarySearch.o btreenode-optimized_interpolatedBinarySearch.o utils_interpolatedBinarySearch.o utils-optimized_interpolatedBinarySearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolatedBinarySearch'
cd btree_slopeReuseInterpolationSearch; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_slopeReuseInterpolationSearch'
rm -f btree_slopeReuseInterpolationSearch.o btree_slopeReuseInterpolationSearch.a btree-optimized_slopeReuseInterpolationSearch.o btree-optimized_slopeReuseInterpolationSearch.a btreenode_slopeReuseInterpolationSearch.o btreenode-optimized_slopeReuseInterpolationSearch.o utils_slopeReuseInterpolationSearch.o utils-optimized_slopeReuseInterpolationSearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_slopeReuseInterpolationSearch'
cd btree_template;make btree-optimized_template.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_template'
g++ -std=c++20 -Wall -Wextra -g -c btree_template.cpp -o btree-optimized_template.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_template.cpp -o btreenode-optimized_template.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_template.o
rm -f btree-optimized_template.a
ar rcs btree-optimized_template.a btree-optimized_template.o btreenode-optimized_template.o utils-optimized_template.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_template'
cd btree_template_bigNode;make btree-optimized_templateBig.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_template_bigNode'
g++ -std=c++20 -Wall -Wextra -g -c btree_templateBigNode.cpp -o btree-optimized_templateBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_templateBigNode.cpp -o btreenode-optimized_templateBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_templateBig.o
rm -f btree-optimized_templateBig.a
ar rcs btree-optimized_templateBig.a btree-optimized_templateBig.o btreenode-optimized_templateBig.o utils-optimized_templateBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_template_bigNode'
cd btree_plain_finished;make btree-optimized_finished.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_plain_finished'
g++ -Wall -Wextra -g -std=c++20 -c btree.cpp -o btree-optimized_finished.o -O3 -DNDEBUG
rm -f btree-optimized_finished.a
ar rcs btree-optimized_finished.a btree-optimized_finished.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_plain_finished'
cd btree_binarySearch_noPrefix;make btree-optimized_binarySearchNoPrefix.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_noPrefix'
g++ -std=c++20 -Wall -Wextra -g -c btree_binarySearchNoPrefix.cpp -o btree-optimized_binarySearchNoPrefix.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_binarySearchNoPrefix.cpp -o btreenode-optimized_binarySearchNoPrefix.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_binarySearchNoPrefix.o
rm -f btree-optimized_binarySearchNoPrefix.a
ar rcs btree-optimized_binarySearchNoPrefix.a btree-optimized_binarySearchNoPrefix.o btreenode-optimized_binarySearchNoPrefix.o utils-optimized_binarySearchNoPrefix.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_noPrefix'
cd btree_binarySearch;make btree-optimized_binarySearch.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch'
g++ -std=c++20 -Wall -Wextra -g -c btree_binarySearch.cpp -o btree-optimized_binarySearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_binarySearch.cpp -o btreenode-optimized_binarySearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_binarySearch.o
rm -f btree-optimized_binarySearch.a
ar rcs btree-optimized_binarySearch.a btree-optimized_binarySearch.o btreenode-optimized_binarySearch.o utils-optimized_binarySearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch'
cd btree_binarySearch_bigNode;make btree-optimized_binarySearchBig.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_bigNode'
g++ -std=c++20 -Wall -Wextra -g -c btree_binarySearchBigNode.cpp -o btree-optimized_binarySearchBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_binarySearchBigNode.cpp -o btreenode-optimized_binarySearchBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_binarySearchBig.o
rm -f btree-optimized_binarySearchBig.a
ar rcs btree-optimized_binarySearchBig.a btree-optimized_binarySearchBig.o btreenode-optimized_binarySearchBig.o utils-optimized_binarySearchBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_bigNode'
cd btree_binarySearch_withHints;make btree-optimized_binarySearchHints.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_withHints'
g++ -std=c++20 -Wall -Wextra -g -c btree_binarySearchHints.cpp -o btree-optimized_binarySearchHints.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_binarySearchHints.cpp -o btreenode-optimized_binarySearchHints.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_binarySearchHints.o
rm -f btree-optimized_binarySearchHints.a
ar rcs btree-optimized_binarySearchHints.a btree-optimized_binarySearchHints.o btreenode-optimized_binarySearchHints.o utils-optimized_binarySearchHints.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_withHints'
cd btree_linearSearch;make btree-optimized_linearSearch.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_linearSearch'
g++ -std=c++20 -Wall -Wextra -g -c btree_linearSearch.cpp -o btree-optimized_linearSearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_linearSearch.cpp -o btreenode-optimized_linearSearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_linearSearch.o
rm -f btree-optimized_linearSearch.a
ar rcs btree-optimized_linearSearch.a btree-optimized_linearSearch.o btreenode-optimized_linearSearch.o utils-optimized_linearSearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_linearSearch'
cd btree_linearSearch_bigNode;make btree-optimized_linearSearchBig.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_linearSearch_bigNode'
g++ -std=c++20 -Wall -Wextra -g -c btree_linearSearchBigNode.cpp -o btree-optimized_linearSearchBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_linearSearchBigNode.cpp -o btreenode-optimized_linearSearchBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_linearSearchBig.o
rm -f btree-optimized_linearSearchBig.a
ar rcs btree-optimized_linearSearchBig.a btree-optimized_linearSearchBig.o btreenode-optimized_linearSearchBig.o utils-optimized_linearSearchBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_linearSearch_bigNode'
cd btree_interpolationSearch;make btree-optimized_interpolationSearch.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch'
g++ -std=c++20 -Wall -Wextra -g -c btree_interpolationSearch.cpp -o btree-optimized_interpolationSearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_interpolationSearch.cpp -o btreenode-optimized_interpolationSearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_interpolationSearch.o
rm -f btree-optimized_interpolationSearch.a
ar rcs btree-optimized_interpolationSearch.a btree-optimized_interpolationSearch.o btreenode-optimized_interpolationSearch.o utils-optimized_interpolationSearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch'
cd btree_interpolationSearch_bigNode;make btree-optimized_interpolationSearchBig.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_bigNode'
g++ -std=c++20 -Wall -Wextra -g -c btree_interpolationSearchBigNode.cpp -o btree-optimized_interpolationSearchBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_interpolationSearchBigNode.cpp -o btreenode-optimized_interpolationSearchBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_interpolationSearchBig.o
rm -f btree-optimized_interpolationSearchBig.a
ar rcs btree-optimized_interpolationSearchBig.a btree-optimized_interpolationSearchBig.o btreenode-optimized_interpolationSearchBig.o utils-optimized_interpolationSearchBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_bigNode'
cd btree_interpolationSearch_withKeyHeads;make btree-optimized_interpolationSearchKeyHeads.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_withKeyHeads'
g++ -std=c++20 -Wall -Wextra -g -c btree_interpolationSearchKeyHeads.cpp -o btree-optimized_interpolationSearchKeyHeads.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_interpolationSearchKeyHeads.cpp -o btreenode-optimized_interpolationSearchKeyHeads.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_interpolationSearchKeyHeads.o
rm -f btree-optimized_interpolationSearchKeyHeads.a
ar rcs btree-optimized_interpolationSearchKeyHeads.a btree-optimized_interpolationSearchKeyHeads.o btreenode-optimized_interpolationSearchKeyHeads.o utils-optimized_interpolationSearchKeyHeads.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_withKeyHeads'
cd btree_interpolationSearch_withKeyHeads_bigNode;make btree-optimized_interpolationSearchKeyHeadsBig.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_withKeyHeads_bigNode'
g++ -std=c++20 -Wall -Wextra -g -c btree_interpolationSearchKeyHeadsBigNode.cpp -o btree-optimized_interpolationSearchKeyHeadsBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_interpolationSearchKeyHeadsBigNode.cpp -o btreenode-optimized_interpolationSearchKeyHeadsBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_interpolationSearchKeyHeadsBig.o
rm -f btree-optimized_interpolationSearchKeyHeadsBig.a
ar rcs btree-optimized_interpolationSearchKeyHeadsBig.a btree-optimized_interpolationSearchKeyHeadsBig.o btreenode-optimized_interpolationSearchKeyHeadsBig.o utils-optimized_interpolationSearchKeyHeadsBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_withKeyHeads_bigNode'
cd btree_adaptiveSearch;make btree-optimized_adaptiveSearch.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_adaptiveSearch'
g++ -std=c++20 -Wall -Wextra -g -c btree_adaptiveSearch.cpp -o btree-optimized_adaptiveSearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_adaptiveSearch.cpp -o btreenode-optimized_adaptiveSearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_adaptiveSearch.o
rm -f btree-optimized_adaptiveSearch.a
ar rcs btree-optimized_adaptiveSearch.a btree-optimized_adaptiveSearch.o btreenode-optimized_adaptiveSearch.o utils-optimized_adaptiveSearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_adaptiveSearch'
cd btree_interpolatedBinarySearch;make btree-optimized_interpolatedBinarySearch.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolatedBinarySearch'
g++ -std=c++20 -Wall -Wextra -g -c btree_interpolatedBinarySearch.cpp -o btree-optimized_interpolatedBinarySearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_interpolatedBinarySearch.cpp -o btreenode-optimized_interpolatedBinarySearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_interpolatedBinarySearch.o
rm -f btree-optimized_interpolatedBinarySearch.a
ar rcs btree-optimized_interpolatedBinarySearch.a btree-optimized_interpolatedBinarySearch.o btreenode-optimized_interpolatedBinarySearch.o utils-optimized_interpolatedBinarySearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolatedBinarySearch'
cd btree_slopeReuseInterpolationSearch;make btree-optimized_slopeReuseInterpolationSearch.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_slopeReuseInterpolationSearch'
g++ -std=c++20 -Wall -Wextra -g -c btree_slopeReuseInterpolationSearch.cpp -o btree-optimized_slopeReuseInterpolationSearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_slopeReuseInterpolationSearch.cpp -o btreenode-optimized_slopeReuseInterpolationSearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_slopeReuseInterpolationSearch.o
rm -f btree-optimized_slopeReuseInterpolationSearch.a
ar rcs btree-optimized_slopeReuseInterpolationSearch.a btree-optimized_slopeReuseInterpolationSearch.o btreenode-optimized_slopeReuseInterpolationSearch.o utils-optimized_slopeReuseInterpolationSearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_slopeReuseInterpolationSearch'
g++ -o main-optimized -std=c++20 -Wall -Wextra -g test_main.cpp btree_template/btree-optimized_template.a btree_template_bigNode/btree-optimized_templateBig.a btree_plain_finished/btree-optimized_finished.a btree_binarySearch_noPrefix/btree-optimized_binarySearchNoPrefix.a btree_binarySearch/btree-optimized_binarySearch.a btree_binarySearch_bigNode/btree-optimized_binarySearchBig.a btree_binarySearch_withHints/btree-optimized_binarySearchHints.a btree_linearSearch/btree-optimized_linearSearch.a btree_linearSearch_bigNode/btree-optimized_linearSearchBig.a btree_interpolationSearch/btree-optimized_interpolationSearch.a btree_interpolationSearch_bigNode/btree-optimized_interpolationSearchBig.a btree_interpolationSearch_withKeyHeads/btree-optimized_interpolationSearchKeyHeads.a btree_interpolationSearch_withKeyHeads_bigNode/btree-optimized_interpolationSearchKeyHeadsBig.a btree_adaptiveSearch/btree-optimized_adaptiveSearch.a btree_interpolatedBinarySearch/btree-optimized_interpolatedBinarySearch.a btree_slopeReuseInterpolationSearch/btree-optimized_slopeReuseInterpolationSearch.a
PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTUNIFORM=100000
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.02, 1317.55,   69.15,      2234.10,     35.08,       8.13,          5.91,     246.49, 100000, 1.70, 1.00, 5.35 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.02, 968.27,    2.95,      1532.56,     14.93,       4.46,          2.68,     179.98, 100000, 1.58, 1.00, 5.38 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.02, 1155.58,    3.61,      1682.90,     26.96,       8.25,          4.40,     214.46, 100000, 1.46, 1.00, 5.39 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTUNIFORM=1000000
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.39, 2132.08,   81.28,      2499.49,     42.15,      25.73,          6.79,     394.31, 1000000, 1.17, 1.00, 5.41 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.32, 1730.13,    5.01,      1761.51,     20.88,      12.03,          3.79,     318.65, 1000000, 1.02, 1.00, 5.43 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.36, 1972.47,    5.76,      1908.22,     31.23,      20.29,          5.54,     363.33, 1000000, 0.97, 1.00, 5.43 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTUNIFORM=10000000
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     7.39, 4029.53,   89.04,      2710.16,     46.91,      35.17,          7.68,     739.03, 10000000, 0.67, 1.00, 5.45 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     6.23, 3409.04,    9.45,      1967.76,     26.43,      19.48,          4.52,     622.94, 10000000, 0.58, 1.00, 5.47 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     7.66, 4194.91,   11.74,      2115.59,     36.73,      28.09,          6.29,     765.81, 10000000, 0.50, 1.00, 5.48 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTUNIFORM=20000000
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    16.63, 4564.07,   91.79,      2815.44,     48.92,      37.61,          8.05,     831.40, 20000000, 0.62, 1.00, 5.49 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    14.07, 3887.67,   10.57,      2031.80,     28.29,      21.89,          5.00,     703.67, 20000000, 0.52, 1.00, 5.52 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    16.42, 4542.90,   12.52,      2177.36,     38.40,      30.12,          6.79,     821.00, 20000000, 0.48, 1.00, 5.53 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTUNIFORM=50000000
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    47.14, 5222.91,   88.14,      2919.21,     50.68,      40.29,          8.44,     942.68, 50000000, 0.56, 1.00, 5.54 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    38.36, 4278.97,   11.56,      2077.82,     29.45,      23.97,          5.10,     767.26, 50000000, 0.49, 1.00, 5.58 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    45.46, 5069.74,   14.02,      2226.55,     39.63,      32.25,          6.91,     909.11, 50000000, 0.44, 1.00, 5.58 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTLITTLEENDIAN=10000000
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     8.56, 4729.58,   92.35,      3116.09,     48.02,      36.02,          8.02,     855.67, 10000000, 0.66, 1.00, 5.53 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     9.45, 5161.78,   14.54,      2550.13,     32.33,      25.49,          5.69,     944.77, 10000000, 0.49, 1.00, 5.46 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     8.53, 4748.55,   12.61,      2456.49,     38.21,      29.29,          6.61,     852.99, 10000000, 0.52, 1.00, 5.57 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTLITTLEENDIAN=20000000
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    17.66, 4894.31,   93.34,      3001.56,     48.84,      37.59,          8.55,     882.94, 20000000, 0.61, 1.00, 5.54 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    17.26, 4813.34,   12.56,      2311.44,     31.04,      24.98,          6.09,     862.74, 20000000, 0.48, 1.00, 5.58 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    17.25, 4807.14,   13.15,      2332.09,     38.55,      30.49,          7.04,     862.59, 20000000, 0.49, 1.00, 5.57 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTRANDOM=10000000 INTRANDOMSEED=30
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     7.59, 4140.95,   91.29,      2906.45,     47.42,      35.19,          8.12,     758.84, 10000000, 0.70, 1.00, 5.46 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     8.06, 4357.75,   12.28,      2321.96,     30.09,      22.48,          6.19,     806.41, 10000000, 0.53, 1.00, 5.40 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     7.86, 4245.16,   12.05,      2283.13,     37.58,      28.09,          6.72,     785.65, 10000000, 0.54, 1.00, 5.40 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTRANDOM=20000000 INTRANDOMSEED=30
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    17.53, 4735.68,   94.04,      2987.09,     48.73,      37.63,          8.69,     876.59, 20000000, 0.63, 1.00, 5.40 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    17.57, 4747.89,   13.35,      2356.34,     31.12,      24.61,          6.71,     878.61, 20000000, 0.50, 1.00, 5.40 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    17.26, 4664.38,   13.28,      2320.85,     38.68,      30.37,          7.29,     863.17, 20000000, 0.50, 1.00, 5.40 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTRANDOM=10000000 INTRANDOMSEED=66
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     7.59, 4134.28,   90.33,      2883.94,     46.98,      35.11,          8.05,     758.78, 10000000, 0.70, 1.00, 5.45 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     7.99, 4358.55,   10.17,      2290.28,     28.91,      22.36,          6.12,     799.15, 10000000, 0.53, 1.00, 5.45 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     7.73, 4213.64,    9.84,      2250.90,     36.43,      28.14,          6.64,     772.94, 10000000, 0.53, 1.00, 5.45 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTRANDOM=20000000 INTRANDOMSEED=66
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    17.51, 4746.22,   92.42,      2971.45,     48.90,      37.56,          8.72,     875.31, 20000000, 0.63, 1.00, 5.42 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    17.57, 4764.31,   11.47,      2346.43,     31.18,      24.67,          6.70,     878.57, 20000000, 0.49, 1.00, 5.42 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    17.24, 4681.01,   10.76,      2311.14,     38.70,      30.53,          7.28,     862.06, 20000000, 0.49, 1.00, 5.43 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=100000 FALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.04, 1908.40,   77.36,      2930.00,     35.84,       8.95,          6.34,     355.58, 100000, 1.54, 1.00, 5.37 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.03, 1404.35,    3.66,      2126.12,     15.44,       4.34,          2.87,     260.71, 100000, 1.51, 1.00, 5.39 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.03, 1528.39,    4.19,      2204.85,     27.97,       9.04,          4.63,     282.87, 100000, 1.44, 1.00, 5.40 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=100000 FALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.04, 2051.12,   53.33,      3180.29,     35.75,       7.27,          5.79,     383.29, 100000, 1.55, 1.00, 5.35 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.02, 1331.96,    3.34,      2037.23,     15.03,       3.80,          2.67,     247.43, 100000, 1.53, 1.00, 5.38 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.03, 1426.63,    3.96,      2044.41,     23.45,       5.68,          4.29,     264.03, 100000, 1.43, 1.00, 5.40 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=100000 FALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.03, 1710.53,   26.85,      2708.81,     30.53,       2.82,          4.29,     319.76, 100000, 1.58, 1.00, 5.35 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.02, 1081.56,    3.00,      1772.17,     11.92,       2.17,          1.95,     201.11, 100000, 1.64, 1.00, 5.38 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.02, 963.37,    2.61,      1458.50,     12.56,       1.84,          2.77,     178.94, 100000, 1.51, 1.00, 5.38 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=100000 FALSHAPE=150
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.02, 1018.56,   11.90,      1798.38,     15.04,       1.69,          3.05,     190.97, 100000, 1.77, 1.00, 5.33 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.02, 815.89,    2.29,      1431.21,      6.11,       1.54,          1.58,     152.29, 100000, 1.75, 1.00, 5.36 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.01, 557.51,    1.82,       869.09,      4.95,       1.09,          1.59,     103.69, 100000, 1.56, 1.00, 5.38 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=1000000 FALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.46, 2485.15,   87.71,      2899.14,     42.86,      25.83,          6.88,     459.82, 1000000, 1.17, 1.00, 5.40 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.38, 2037.15,    4.91,      2178.69,     21.40,      12.26,          3.40,     375.24, 1000000, 1.07, 1.00, 5.43 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.41, 2224.13,    5.23,      2282.31,     31.41,      20.27,          4.84,     409.70, 1000000, 1.03, 1.00, 5.43 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=1000000 FALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.25, 1347.71,   10.66,      1999.43,     31.92,       4.61,          3.00,     249.64, 1000000, 1.48, 1.00, 5.40 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.17, 941.62,    2.33,      1434.56,     11.42,       2.85,          1.53,     174.24, 1000000, 1.52, 1.00, 5.40 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.11, 606.73,    1.44,       856.18,      6.12,       2.28,          1.52,     112.28, 1000000, 1.41, 1.00, 5.40 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=1000000 FALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.21, 1105.30,    5.88,      1667.58,     14.92,       2.25,          2.56,     205.01, 1000000, 1.51, 1.00, 5.39 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.15, 815.40,    1.95,      1350.30,      6.81,       1.90,          1.48,     150.89, 1000000, 1.66, 1.00, 5.40 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.08, 457.69,    1.17,       674.56,      3.37,       1.42,          1.17,      84.70, 1000000, 1.47, 1.00, 5.40 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=1000000 FALSHAPE=150
PerformanceTestStandard START
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.16, 861.43,    3.46,      1420.67,      5.44,       1.31,          1.15,     160.14, 1000000, 1.65, 1.00, 5.38 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.11, 576.63,    1.41,      1047.27,      2.33,       1.22,          0.57,     106.71, 1000000, 1.82, 1.00, 5.40 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.04, 213.73,    0.57,       351.02,      1.87,       1.15,          0.26,      39.66, 1000000, 1.64, 1.00, 5.39 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=10000000 FALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     6.10, 3302.17,   37.56,      2830.20,     45.23,      32.83,          6.14,     609.82, 10000000, 0.86, 1.00, 5.41 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     5.08, 2721.42,    7.73,      2243.89,     23.26,      15.44,          3.79,     508.45, 10000000, 0.82, 1.00, 5.35 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     4.66, 2489.82,    6.47,      1994.10,     23.19,      14.80,          4.89,     466.07, 10000000, 0.80, 1.00, 5.34 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=10000000 FALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     2.39, 1271.80,    3.86,      1638.63,     14.99,       3.08,          2.44,     238.69, 10000000, 1.29, 1.00, 5.33 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     2.02, 1078.13,    2.50,      1287.74,      6.30,       2.58,          1.56,     202.33, 10000000, 1.19, 1.00, 5.33 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     1.33, 710.20,    1.68,       585.10,      2.51,       1.89,          1.15,     132.96, 10000000, 0.82, 1.00, 5.34 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=10000000 FALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     1.98, 1055.83,    2.82,      1393.30,      4.90,       1.96,          0.85,     198.16, 10000000, 1.32, 1.00, 5.33 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     1.68, 893.91,    2.07,      1141.00,      2.45,       1.82,          0.44,     167.71, 10000000, 1.28, 1.00, 5.33 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.99, 532.40,    1.27,       410.59,      1.71,       1.71,          0.21,      99.45, 10000000, 0.77, 1.00, 5.35 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=10000000 FALSHAPE=150
PerformanceTestStandard START
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     1.53, 824.24,    2.54,      1040.35,      3.45,       1.76,          0.50,     152.76, 10000000, 1.26, 1.00, 5.40 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     1.21, 652.83,    1.89,       727.51,      1.68,       1.70,          0.45,     120.80, 10000000, 1.11, 1.00, 5.40 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.62, 333.37,    0.98,       291.37,      1.50,       1.62,          0.05,      61.65, 10000000, 0.87, 1.00, 5.41 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=20000000 FALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    11.32, 3057.55,   24.12,      2653.54,     45.28,      32.66,          5.52,     565.81, 20000000, 0.87, 1.00, 5.40 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     9.48, 2570.37,    6.16,      2152.43,     22.47,      14.94,          3.59,     474.19, 20000000, 0.84, 1.00, 5.42 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     7.54, 2038.78,    5.01,      1729.87,     18.41,      10.82,          4.17,     377.06, 20000000, 0.85, 1.00, 5.41 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=20000000 FALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     4.68, 1262.50,    3.91,      1748.04,     10.18,       2.63,          2.03,     233.86, 20000000, 1.38, 1.00, 5.40 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     3.73, 1009.03,    2.79,      1206.72,      4.43,       2.31,          1.02,     186.23, 20000000, 1.20, 1.00, 5.42 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     2.26, 610.05,    1.76,       477.58,      2.06,       1.97,          0.64,     112.83, 20000000, 0.78, 1.00, 5.41 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=20000000 FALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     3.86, 1043.94,    3.15,      1337.44,      4.71,       2.06,          0.72,     193.18, 20000000, 1.28, 1.00, 5.40 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     3.29, 887.32,    2.52,      1068.30,      1.96,       1.97,          0.49,     164.24, 20000000, 1.20, 1.00, 5.40 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     2.03, 551.45,    1.57,       390.41,      1.56,       1.87,          0.12,     101.62, 20000000, 0.71, 1.00, 5.43 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=20000000 FALSHAPE=150
PerformanceTestStandard START
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     3.09, 834.78,    2.48,      1014.79,      3.13,       1.92,          0.31,     154.47, 20000000, 1.22, 1.00, 5.40 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     2.37, 640.38,    1.83,       673.63,      1.59,       1.86,          0.23,     118.50, 20000000, 1.05, 1.00, 5.40 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     1.27, 344.43,    0.98,       287.49,      1.47,       1.80,          0.03,      63.45, 20000000, 0.83, 1.00, 5.43 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=50000000 FALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    25.55, 2761.85,   15.55,      2417.08,     45.27,      31.99,          4.99,     510.91, 50000000, 0.88, 1.00, 5.41 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    19.97, 2165.69,    5.97,      1817.39,     22.52,      14.15,          3.39,     399.37, 50000000, 0.84, 1.00, 5.42 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    13.50, 1461.85,    3.42,      1248.99,     15.23,       7.52,          3.44,     270.04, 50000000, 0.85, 1.00, 5.41 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=50000000 FALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    11.03, 1191.17,    3.10,      1609.99,      6.50,       2.52,          1.36,     220.51, 50000000, 1.35, 1.00, 5.40 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     9.05, 976.32,    2.35,      1175.72,      3.04,       2.29,          0.65,     181.06, 50000000, 1.20, 1.00, 5.39 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     5.54, 593.49,    1.46,       436.59,      1.71,       2.05,          0.39,     110.70, 50000000, 0.74, 1.00, 5.36 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=50000000 FALSHAPE=125
PerformanceTestStandard START
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     9.21, 994.43,    2.99,      1228.88,      3.93,       2.16,          1.05,     184.23, 50000000, 1.24, 1.00, 5.40 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     7.81, 843.51,    2.44,       948.31,      1.83,       2.09,          0.73,     156.17, 50000000, 1.12, 1.00, 5.40 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     5.16, 560.14,    1.62,       379.81,      1.51,       2.01,          0.06,     103.18, 50000000, 0.68, 1.00, 5.43 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=50000000 FALSHAPE=150
PerformanceTestStandard START
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     7.50, 817.42,    2.29,       968.59,      2.89,       2.05,          0.13,     149.96, 50000000, 1.18, 1.00, 5.45 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     5.73, 630.46,    1.73,       641.37,      1.52,       2.01,          0.11,     114.61, 50000000, 1.02, 1.00, 5.50 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     3.19, 350.75,    0.96,       284.68,      1.44,       1.95,          0.03,      63.76, 50000000, 0.81, 1.00, 5.50 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=100000 CFALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.03, 1553.47,   79.15,      2508.71,     34.49,       8.77,          6.15,     288.12, 100000, 1.61, 1.00, 5.39 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.02, 1157.49,    3.39,      1826.41,     14.72,       4.27,          2.93,     213.62, 100000, 1.58, 1.00, 5.42 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.02, 1282.97,    3.63,      1911.59,     25.81,       8.67,          4.85,     236.40, 100000, 1.49, 1.00, 5.43 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=100000 CFALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.03, 1599.66,   69.44,      2662.43,     35.79,       8.57,          6.30,     297.38, 100000, 1.66, 1.00, 5.38 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.02, 1236.32,    3.86,      1937.54,     16.26,       4.37,          2.66,     228.20, 100000, 1.57, 1.00, 5.42 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.03, 1359.54,    3.94,      2018.17,     28.26,       8.78,          4.39,     250.44, 100000, 1.48, 1.00, 5.43 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=100000 CFALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.03, 1704.40,   74.13,      2791.29,     35.50,       8.80,          6.30,     316.17, 100000, 1.64, 1.00, 5.39 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.02, 1304.22,    3.74,      2025.14,     15.35,       4.46,          2.64,     240.56, 100000, 1.55, 1.00, 5.42 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.03, 1424.41,    3.91,      2103.33,     27.48,       8.62,          4.35,     262.42, 100000, 1.48, 1.00, 5.43 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=100000 CFALSHAPE=150
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.03, 1818.33,   66.89,      2934.00,     35.83,       8.59,          6.36,     337.28, 100000, 1.61, 1.00, 5.39 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.03, 1381.18,    3.90,      2083.23,     15.64,       4.53,          3.00,     254.54, 100000, 1.51, 1.00, 5.43 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.03, 1517.64,    4.36,      2183.96,     27.59,       8.44,          4.60,     279.47, 100000, 1.44, 1.00, 5.43 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=1000000 CFALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.41, 2235.07,   89.10,      2806.38,     41.95,      25.35,          6.72,     410.20, 1000000, 1.26, 1.00, 5.45 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.36, 1969.53,    5.60,      2155.77,     21.88,      12.51,          3.02,     360.62, 1000000, 1.09, 1.00, 5.46 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.39, 2122.14,    5.92,      2264.00,     31.75,      20.18,          4.45,     388.75, 1000000, 1.07, 1.00, 5.46 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=1000000 CFALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.42, 2291.98,   91.14,      2877.79,     42.56,      25.50,          6.92,     420.65, 1000000, 1.26, 1.00, 5.45 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.37, 2037.45,    5.90,      2214.33,     21.77,      12.36,          3.45,     372.89, 1000000, 1.09, 1.00, 5.46 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.41, 2211.10,    6.30,      2338.99,     31.69,      20.11,          5.05,     405.20, 1000000, 1.06, 1.00, 5.46 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=1000000 CFALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.43, 2362.13,   86.39,      2862.20,     42.43,      25.61,          7.12,     433.58, 1000000, 1.21, 1.00, 5.45 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.37, 1999.20,    5.83,      2134.64,     21.38,      12.17,          3.27,     365.92, 1000000, 1.07, 1.00, 5.46 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.41, 2225.58,    6.53,      2270.66,     31.33,      20.23,          5.02,     407.71, 1000000, 1.02, 1.00, 5.46 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=1000000 CFALSHAPE=150
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.46, 2481.62,   82.82,      2932.94,     43.01,      25.87,          6.99,     455.43, 1000000, 1.18, 1.00, 5.45 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.38, 2073.27,    5.99,      2210.45,     21.52,      12.13,          3.41,     379.45, 1000000, 1.07, 1.00, 5.46 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.42, 2302.37,    6.61,      2354.14,     31.57,      20.36,          5.17,     421.65, 1000000, 1.02, 1.00, 5.46 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=10000000 CFALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     7.39, 4068.77,   90.16,      3031.75,     47.46,      34.84,          7.68,     738.49, 10000000, 0.75, 1.00, 5.51 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     6.46, 3582.60,    9.78,      2174.54,     29.40,      19.89,          4.44,     645.96, 10000000, 0.61, 1.00, 5.55 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     7.55, 4196.52,   11.29,      2323.97,     39.86,      28.19,          6.21,     754.67, 10000000, 0.55, 1.00, 5.56 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=10000000 CFALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     7.81, 4315.34,   90.04,      3116.03,     48.42,      35.03,          7.98,     780.48, 10000000, 0.72, 1.00, 5.53 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     6.51, 3633.59,    9.83,      2241.55,     27.82,      19.63,          4.16,     651.45, 10000000, 0.62, 1.00, 5.58 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     7.88, 4392.90,   12.05,      2389.24,     38.42,      28.18,          5.97,     788.29, 10000000, 0.54, 1.00, 5.57 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=10000000 CFALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     8.12, 4495.32,   90.91,      3298.60,     48.11,      35.44,          8.00,     811.49, 10000000, 0.73, 1.00, 5.54 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     6.64, 3706.10,   10.07,      2305.13,     27.83,      19.61,          4.38,     664.30, 10000000, 0.62, 1.00, 5.58 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     7.98, 4448.99,   12.14,      2453.08,     38.82,      28.35,          6.27,     798.47, 10000000, 0.55, 1.00, 5.57 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=10000000 CFALSHAPE=150
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     2.10, 1145.90,   13.11,      1523.55,      9.08,       5.47,          1.11,     210.02, 10000000, 1.33, 1.00, 5.46 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     1.63, 903.09,    2.56,       926.99,      4.20,       3.41,          0.61,     163.42, 10000000, 1.03, 1.00, 5.53 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     1.65, 910.33,    2.59,       877.66,      5.56,       4.49,          0.84,     164.73, 10000000, 0.96, 1.00, 5.53 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=20000000 CFALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    16.74, 4651.32,   93.29,      3067.44,     49.40,      37.29,          8.29,     837.10, 20000000, 0.66, 1.00, 5.56 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    14.35, 4002.29,   10.68,      2229.41,     28.89,      22.04,          4.91,     717.25, 20000000, 0.56, 1.00, 5.58 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    16.62, 4649.87,   12.56,      2377.89,     38.76,      30.04,          6.72,     830.79, 20000000, 0.51, 1.00, 5.60 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=20000000 CFALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    17.29, 4811.93,   92.64,      3165.26,     50.51,      37.45,          8.17,     864.24, 20000000, 0.66, 1.00, 5.57 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    14.63, 4097.10,   11.17,      2298.15,     29.35,      22.18,          4.28,     731.28, 20000000, 0.56, 1.00, 5.60 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    16.84, 4713.55,   13.01,      2445.03,     39.42,      30.20,          6.07,     842.12, 20000000, 0.52, 1.00, 5.60 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=20000000 CFALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    12.92, 3580.66,   64.03,      2650.05,     38.04,      26.64,          6.05,     645.88, 20000000, 0.74, 1.00, 5.54 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    10.58, 2952.46,    8.03,      1799.45,     21.27,      15.30,          3.69,     529.22, 20000000, 0.61, 1.00, 5.58 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    12.28, 3423.44,    9.36,      1878.53,     28.85,      21.33,          4.98,     613.94, 20000000, 0.55, 1.00, 5.58 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=20000000 CFALSHAPE=150
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     3.77, 1031.06,    8.16,      1384.53,      6.93,       3.87,          0.59,     188.71, 20000000, 1.34, 1.00, 5.46 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     2.87, 792.15,    2.21,       819.57,      2.86,       2.80,          0.32,     143.36, 20000000, 1.03, 1.00, 5.53 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     2.86, 793.43,    2.17,       753.54,      3.52,       3.32,          0.44,     143.02, 20000000, 0.95, 1.00, 5.55 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=50000000 CFALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    47.49, 5295.08,   89.71,      3104.50,     51.02,      39.99,          8.54,     949.85, 50000000, 0.59, 1.00, 5.57 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    39.49, 4426.13,   12.09,      2324.38,     30.17,      24.10,          4.47,     789.85, 50000000, 0.53, 1.00, 5.60 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    46.45, 5202.23,   14.12,      2475.59,     40.24,      32.26,          6.36,     928.98, 50000000, 0.48, 1.00, 5.60 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=50000000 CFALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    48.32, 5388.12,   88.83,      3187.24,     51.85,      40.29,          8.24,     966.41, 50000000, 0.59, 1.00, 5.58 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    39.96, 4478.30,   12.07,      2375.67,     30.43,      24.19,          4.34,     799.14, 50000000, 0.53, 1.00, 5.60 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    46.91, 5252.43,   14.39,      2526.59,     40.65,      32.43,          6.22,     938.13, 50000000, 0.48, 1.00, 5.60 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=50000000 CFALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    18.60, 2051.58,   26.90,      1956.28,     18.48,      12.09,          2.56,     371.94, 50000000, 0.95, 1.00, 5.52 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    14.78, 1649.34,    4.50,      1216.26,      9.53,       7.47,          1.52,     295.65, 50000000, 0.74, 1.00, 5.58 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    16.20, 1806.03,    4.99,      1202.17,     12.54,       9.86,          2.02,     324.07, 50000000, 0.67, 1.00, 5.57 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=50000000 CFALSHAPE=150
PerformanceTestStandard START
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     8.73, 954.92,    4.73,      1287.99,      4.45,       2.91,          0.27,     174.60, 50000000, 1.35, 1.00, 5.47 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     6.55, 726.13,    2.01,       753.46,      2.06,       2.44,          0.14,     130.97, 50000000, 1.04, 1.00, 5.54 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     6.47, 718.13,    1.94,       681.58,      2.33,       2.65,          0.19,     129.33, 50000000, 0.95, 1.00, 5.55 
PerformanceTestStandard END

