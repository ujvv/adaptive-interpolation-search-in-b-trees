rm -f main
rm -f main-optimized
cd btree_template; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_template'
rm -f btree_template.o btree_template.a btree-optimized_template.o btree-optimized_template.a btreenode_template.o btreenode-optimized_template.o utils_template.o utils-optimized_template.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_template'
cd btree_template_bigNode; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_template_bigNode'
rm -f btree_templateBig.o btree_templateBig.a btree-optimized_templateBig.o btree-optimized_templateBig.a btreenode_templateBig.o btreenode-optimized_templateBig.o utils_templateBig.o utils-optimized_templateBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_template_bigNode'
cd btree_plain_finished; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_plain_finished'
rm -f btree_finished.o btree_finished.a btree-optimized_finished.o btree-optimized_finished.a
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_plain_finished'
cd btree_binarySearch_noPrefix; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_noPrefix'
rm -f btree_binarySearchNoPrefix.o btree_binarySearchNoPrefix.a btree-optimized_binarySearchNoPrefix.o btree-optimized_binarySearchNoPrefix.a btreenode_binarySearchNoPrefix.o btreenode-optimized_binarySearchNoPrefix.o utils_binarySearchNoPrefix.o utils-optimized_binarySearchNoPrefix.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_noPrefix'
cd btree_binarySearch; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch'
rm -f btree_binarySearch.o btree_binarySearch.a btree-optimized_binarySearch.o btree-optimized_binarySearch.a btreenode_binarySearch.o btreenode-optimized_binarySearch.o utils_binarySearch.o utils-optimized_binarySearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch'
cd btree_binarySearch_bigNode; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_bigNode'
rm -f btree_binarySearchBig.o btree_binarySearchBig.a btree-optimized_binarySearchBig.o btree-optimized_binarySearchBig.a btreenode_binarySearchBig.o btreenode-optimized_binarySearchBig.o utils_binarySearchBig.o utils-optimized_binarySearchBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_bigNode'
cd btree_binarySearch_withHints; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_withHints'
rm -f btree_binarySearchHints.o btree_binarySearchHints.a btree-optimized_binarySearchHints.o btree-optimized_binarySearchHints.a btreenode_binarySearchHints.o btreenode-optimized_binarySearchHints.o utils_binarySearchHints.o utils-optimized_binarySearchHints.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_withHints'
cd btree_linearSearch; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_linearSearch'
rm -f btree_linearSearch.o btree_linearSearch.a btree-optimized_linearSearch.o btree-optimized_linearSearch.a btreenode_linearSearch.o btreenode-optimized_linearSearch.o utils_linearSearch.o utils-optimized_linearSearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_linearSearch'
cd btree_linearSearch_bigNode; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_linearSearch_bigNode'
rm -f btree_linearSearchBig.o btree_linearSearchBig.a btree-optimized_linearSearchBig.o btree-optimized_linearSearchBig.a btreenode_linearSearchBig.o btreenode-optimized_linearSearchBig.o utils_linearSearchBig.o utils-optimized_linearSearchBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_linearSearch_bigNode'
cd btree_interpolationSearch; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch'
rm -f btree_interpolationSearch.o btree_interpolationSearch.a btree-optimized_interpolationSearch.o btree-optimized_interpolationSearch.a btreenode_interpolationSearch.o btreenode-optimized_interpolationSearch.o utils_interpolationSearch.o utils-optimized_interpolationSearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch'
cd btree_interpolationSearch_bigNode; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_bigNode'
rm -f btree_interpolationSearchBig.o btree_interpolationSearchBig.a btree-optimized_interpolationSearchBig.o btree-optimized_interpolationSearchBig.a btreenode_interpolationSearchBig.o btreenode-optimized_interpolationSearchBig.o utils_interpolationSearchBig.o utils-optimized_interpolationSearchBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_bigNode'
cd btree_interpolationSearch_withKeyHeads; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_withKeyHeads'
rm -f btree_interpolationSearchKeyHeads.o btree_interpolationSearchKeyHeads.a btree-optimized_interpolationSearchKeyHeads.o btree-optimized_interpolationSearchKeyHeads.a btreenode_interpolationSearchKeyHeads.o btreenode-optimized_interpolationSearchKeyHeads.o utils_interpolationSearchKeyHeads.o utils-optimized_interpolationSearchKeyHeads.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_withKeyHeads'
cd btree_interpolationSearch_withKeyHeads_bigNode; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_withKeyHeads_bigNode'
rm -f btree_interpolationSearchKeyHeadsBig.o btree_interpolationSearchKeyHeadsBig.a btree-optimized_interpolationSearchKeyHeadsBig.o btree-optimized_interpolationSearchKeyHeadsBig.a btreenode_interpolationSearchKeyHeadsBig.o btreenode-optimized_interpolationSearchKeyHeadsBig.o utils_interpolationSearchKeyHeadsBig.o utils-optimized_interpolationSearchKeyHeadsBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_withKeyHeads_bigNode'
cd btree_adaptiveSearch; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_adaptiveSearch'
rm -f btree_adaptiveSearch.o btree_adaptiveSearch.a btree-optimized_adaptiveSearch.o btree-optimized_adaptiveSearch.a btreenode_adaptiveSearch.o btreenode-optimized_adaptiveSearch.o utils_adaptiveSearch.o utils-optimized_adaptiveSearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_adaptiveSearch'
cd btree_interpolatedBinarySearch; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolatedBinarySearch'
rm -f btree_interpolatedBinarySearch.o btree_interpolatedBinarySearch.a btree-optimized_interpolatedBinarySearch.o btree-optimized_interpolatedBinarySearch.a btreenode_interpolatedBinarySearch.o btreenode-optimized_interpolatedBinarySearch.o utils_interpolatedBinarySearch.o utils-optimized_interpolatedBinarySearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolatedBinarySearch'
cd btree_slopeReuseInterpolationSearch; make clean
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_slopeReuseInterpolationSearch'
rm -f btree_slopeReuseInterpolationSearch.o btree_slopeReuseInterpolationSearch.a btree-optimized_slopeReuseInterpolationSearch.o btree-optimized_slopeReuseInterpolationSearch.a btreenode_slopeReuseInterpolationSearch.o btreenode-optimized_slopeReuseInterpolationSearch.o utils_slopeReuseInterpolationSearch.o utils-optimized_slopeReuseInterpolationSearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_slopeReuseInterpolationSearch'
cd btree_template;make btree-optimized_template.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_template'
g++ -std=c++20 -Wall -Wextra -g -c btree_template.cpp -o btree-optimized_template.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_template.cpp -o btreenode-optimized_template.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_template.o
rm -f btree-optimized_template.a
ar rcs btree-optimized_template.a btree-optimized_template.o btreenode-optimized_template.o utils-optimized_template.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_template'
cd btree_template_bigNode;make btree-optimized_templateBig.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_template_bigNode'
g++ -std=c++20 -Wall -Wextra -g -c btree_templateBigNode.cpp -o btree-optimized_templateBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_templateBigNode.cpp -o btreenode-optimized_templateBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_templateBig.o
rm -f btree-optimized_templateBig.a
ar rcs btree-optimized_templateBig.a btree-optimized_templateBig.o btreenode-optimized_templateBig.o utils-optimized_templateBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_template_bigNode'
cd btree_plain_finished;make btree-optimized_finished.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_plain_finished'
g++ -Wall -Wextra -g -std=c++20 -c btree.cpp -o btree-optimized_finished.o -O3 -DNDEBUG
rm -f btree-optimized_finished.a
ar rcs btree-optimized_finished.a btree-optimized_finished.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_plain_finished'
cd btree_binarySearch_noPrefix;make btree-optimized_binarySearchNoPrefix.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_noPrefix'
g++ -std=c++20 -Wall -Wextra -g -c btree_binarySearchNoPrefix.cpp -o btree-optimized_binarySearchNoPrefix.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_binarySearchNoPrefix.cpp -o btreenode-optimized_binarySearchNoPrefix.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_binarySearchNoPrefix.o
rm -f btree-optimized_binarySearchNoPrefix.a
ar rcs btree-optimized_binarySearchNoPrefix.a btree-optimized_binarySearchNoPrefix.o btreenode-optimized_binarySearchNoPrefix.o utils-optimized_binarySearchNoPrefix.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_noPrefix'
cd btree_binarySearch;make btree-optimized_binarySearch.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch'
g++ -std=c++20 -Wall -Wextra -g -c btree_binarySearch.cpp -o btree-optimized_binarySearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_binarySearch.cpp -o btreenode-optimized_binarySearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_binarySearch.o
rm -f btree-optimized_binarySearch.a
ar rcs btree-optimized_binarySearch.a btree-optimized_binarySearch.o btreenode-optimized_binarySearch.o utils-optimized_binarySearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch'
cd btree_binarySearch_bigNode;make btree-optimized_binarySearchBig.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_bigNode'
g++ -std=c++20 -Wall -Wextra -g -c btree_binarySearchBigNode.cpp -o btree-optimized_binarySearchBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_binarySearchBigNode.cpp -o btreenode-optimized_binarySearchBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_binarySearchBig.o
rm -f btree-optimized_binarySearchBig.a
ar rcs btree-optimized_binarySearchBig.a btree-optimized_binarySearchBig.o btreenode-optimized_binarySearchBig.o utils-optimized_binarySearchBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_bigNode'
cd btree_binarySearch_withHints;make btree-optimized_binarySearchHints.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_withHints'
g++ -std=c++20 -Wall -Wextra -g -c btree_binarySearchHints.cpp -o btree-optimized_binarySearchHints.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_binarySearchHints.cpp -o btreenode-optimized_binarySearchHints.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_binarySearchHints.o
rm -f btree-optimized_binarySearchHints.a
ar rcs btree-optimized_binarySearchHints.a btree-optimized_binarySearchHints.o btreenode-optimized_binarySearchHints.o utils-optimized_binarySearchHints.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_binarySearch_withHints'
cd btree_linearSearch;make btree-optimized_linearSearch.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_linearSearch'
g++ -std=c++20 -Wall -Wextra -g -c btree_linearSearch.cpp -o btree-optimized_linearSearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_linearSearch.cpp -o btreenode-optimized_linearSearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_linearSearch.o
rm -f btree-optimized_linearSearch.a
ar rcs btree-optimized_linearSearch.a btree-optimized_linearSearch.o btreenode-optimized_linearSearch.o utils-optimized_linearSearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_linearSearch'
cd btree_linearSearch_bigNode;make btree-optimized_linearSearchBig.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_linearSearch_bigNode'
g++ -std=c++20 -Wall -Wextra -g -c btree_linearSearchBigNode.cpp -o btree-optimized_linearSearchBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_linearSearchBigNode.cpp -o btreenode-optimized_linearSearchBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_linearSearchBig.o
rm -f btree-optimized_linearSearchBig.a
ar rcs btree-optimized_linearSearchBig.a btree-optimized_linearSearchBig.o btreenode-optimized_linearSearchBig.o utils-optimized_linearSearchBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_linearSearch_bigNode'
cd btree_interpolationSearch;make btree-optimized_interpolationSearch.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch'
g++ -std=c++20 -Wall -Wextra -g -c btree_interpolationSearch.cpp -o btree-optimized_interpolationSearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_interpolationSearch.cpp -o btreenode-optimized_interpolationSearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_interpolationSearch.o
rm -f btree-optimized_interpolationSearch.a
ar rcs btree-optimized_interpolationSearch.a btree-optimized_interpolationSearch.o btreenode-optimized_interpolationSearch.o utils-optimized_interpolationSearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch'
cd btree_interpolationSearch_bigNode;make btree-optimized_interpolationSearchBig.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_bigNode'
g++ -std=c++20 -Wall -Wextra -g -c btree_interpolationSearchBigNode.cpp -o btree-optimized_interpolationSearchBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_interpolationSearchBigNode.cpp -o btreenode-optimized_interpolationSearchBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_interpolationSearchBig.o
rm -f btree-optimized_interpolationSearchBig.a
ar rcs btree-optimized_interpolationSearchBig.a btree-optimized_interpolationSearchBig.o btreenode-optimized_interpolationSearchBig.o utils-optimized_interpolationSearchBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_bigNode'
cd btree_interpolationSearch_withKeyHeads;make btree-optimized_interpolationSearchKeyHeads.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_withKeyHeads'
g++ -std=c++20 -Wall -Wextra -g -c btree_interpolationSearchKeyHeads.cpp -o btree-optimized_interpolationSearchKeyHeads.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_interpolationSearchKeyHeads.cpp -o btreenode-optimized_interpolationSearchKeyHeads.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_interpolationSearchKeyHeads.o
rm -f btree-optimized_interpolationSearchKeyHeads.a
ar rcs btree-optimized_interpolationSearchKeyHeads.a btree-optimized_interpolationSearchKeyHeads.o btreenode-optimized_interpolationSearchKeyHeads.o utils-optimized_interpolationSearchKeyHeads.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_withKeyHeads'
cd btree_interpolationSearch_withKeyHeads_bigNode;make btree-optimized_interpolationSearchKeyHeadsBig.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_withKeyHeads_bigNode'
g++ -std=c++20 -Wall -Wextra -g -c btree_interpolationSearchKeyHeadsBigNode.cpp -o btree-optimized_interpolationSearchKeyHeadsBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_interpolationSearchKeyHeadsBigNode.cpp -o btreenode-optimized_interpolationSearchKeyHeadsBig.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_interpolationSearchKeyHeadsBig.o
rm -f btree-optimized_interpolationSearchKeyHeadsBig.a
ar rcs btree-optimized_interpolationSearchKeyHeadsBig.a btree-optimized_interpolationSearchKeyHeadsBig.o btreenode-optimized_interpolationSearchKeyHeadsBig.o utils-optimized_interpolationSearchKeyHeadsBig.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolationSearch_withKeyHeads_bigNode'
cd btree_adaptiveSearch;make btree-optimized_adaptiveSearch.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_adaptiveSearch'
g++ -std=c++20 -Wall -Wextra -g -c btree_adaptiveSearch.cpp -o btree-optimized_adaptiveSearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_adaptiveSearch.cpp -o btreenode-optimized_adaptiveSearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_adaptiveSearch.o
rm -f btree-optimized_adaptiveSearch.a
ar rcs btree-optimized_adaptiveSearch.a btree-optimized_adaptiveSearch.o btreenode-optimized_adaptiveSearch.o utils-optimized_adaptiveSearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_adaptiveSearch'
cd btree_interpolatedBinarySearch;make btree-optimized_interpolatedBinarySearch.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolatedBinarySearch'
g++ -std=c++20 -Wall -Wextra -g -c btree_interpolatedBinarySearch.cpp -o btree-optimized_interpolatedBinarySearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_interpolatedBinarySearch.cpp -o btreenode-optimized_interpolatedBinarySearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_interpolatedBinarySearch.o
rm -f btree-optimized_interpolatedBinarySearch.a
ar rcs btree-optimized_interpolatedBinarySearch.a btree-optimized_interpolatedBinarySearch.o btreenode-optimized_interpolatedBinarySearch.o utils-optimized_interpolatedBinarySearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_interpolatedBinarySearch'
cd btree_slopeReuseInterpolationSearch;make btree-optimized_slopeReuseInterpolationSearch.a
make[1]: Entering directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_slopeReuseInterpolationSearch'
g++ -std=c++20 -Wall -Wextra -g -c btree_slopeReuseInterpolationSearch.cpp -o btree-optimized_slopeReuseInterpolationSearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c btreenode_slopeReuseInterpolationSearch.cpp -o btreenode-optimized_slopeReuseInterpolationSearch.o -O3 -DNDEBUG
g++ -std=c++20 -Wall -Wextra -g -c utils.hpp -o utils-optimized_slopeReuseInterpolationSearch.o
rm -f btree-optimized_slopeReuseInterpolationSearch.a
ar rcs btree-optimized_slopeReuseInterpolationSearch.a btree-optimized_slopeReuseInterpolationSearch.o btreenode-optimized_slopeReuseInterpolationSearch.o utils-optimized_slopeReuseInterpolationSearch.o
make[1]: Leaving directory '/home/ge78kag/adaptive-interpolation-search-in-b-trees/btree_slopeReuseInterpolationSearch'
g++ -o main-optimized -std=c++20 -Wall -Wextra -g test_main.cpp btree_template/btree-optimized_template.a btree_template_bigNode/btree-optimized_templateBig.a btree_plain_finished/btree-optimized_finished.a btree_binarySearch_noPrefix/btree-optimized_binarySearchNoPrefix.a btree_binarySearch/btree-optimized_binarySearch.a btree_binarySearch_bigNode/btree-optimized_binarySearchBig.a btree_binarySearch_withHints/btree-optimized_binarySearchHints.a btree_linearSearch/btree-optimized_linearSearch.a btree_linearSearch_bigNode/btree-optimized_linearSearchBig.a btree_interpolationSearch/btree-optimized_interpolationSearch.a btree_interpolationSearch_bigNode/btree-optimized_interpolationSearchBig.a btree_interpolationSearch_withKeyHeads/btree-optimized_interpolationSearchKeyHeads.a btree_interpolationSearch_withKeyHeads_bigNode/btree-optimized_interpolationSearchKeyHeadsBig.a btree_adaptiveSearch/btree-optimized_adaptiveSearch.a btree_interpolatedBinarySearch/btree-optimized_interpolatedBinarySearch.a btree_slopeReuseInterpolationSearch/btree-optimized_slopeReuseInterpolationSearch.a
PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTUNIFORM=100000
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.03, 1444.17,   81.98,      2233.16,     36.26,       8.58,          5.93,     270.77, 100000, 1.55, 1.00, 5.33 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.02, 1042.27,    3.24,      1533.83,     14.79,       4.45,          2.67,     194.80, 100000, 1.47, 1.00, 5.35 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.02, 1230.76,    3.60,      1679.58,     26.44,       8.25,          4.40,     230.07, 100000, 1.36, 1.00, 5.35 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTUNIFORM=1000000
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.43, 2288.30,   85.91,      2500.54,     42.86,      25.37,          6.80,     427.94, 1000000, 1.09, 1.00, 5.35 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.34, 1820.39,    5.04,      1761.70,     20.95,      11.97,          3.78,     340.40, 1000000, 0.97, 1.00, 5.35 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.38, 2026.29,    5.60,      1907.99,     31.26,      20.06,          5.52,     378.98, 1000000, 0.94, 1.00, 5.35 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTUNIFORM=10000000
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     7.53, 4043.42,   87.77,      2708.65,     46.97,      35.24,          7.66,     753.15, 10000000, 0.67, 1.00, 5.37 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     6.35, 3410.05,    8.36,      1967.31,     26.25,      19.45,          4.51,     635.33, 10000000, 0.58, 1.00, 5.37 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     7.81, 4199.46,   10.33,      2114.97,     36.49,      28.07,          6.28,     780.84, 10000000, 0.50, 1.00, 5.38 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTUNIFORM=20000000
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    17.14, 4594.64,   92.62,      2814.73,     48.98,      37.65,          8.04,     856.94, 20000000, 0.61, 1.00, 5.36 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    14.41, 3861.10,    9.74,      2031.45,     28.41,      21.89,          4.99,     720.56, 20000000, 0.53, 1.00, 5.36 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    16.80, 4497.70,   11.26,      2176.75,     38.51,      30.03,          6.77,     839.81, 20000000, 0.48, 1.00, 5.36 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTUNIFORM=50000000
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    50.04, 5372.65,   92.63,      2919.10,     51.02,      40.19,          8.45,    1000.76, 50000000, 0.54, 1.00, 5.37 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    39.14, 4325.87,   11.20,      2077.93,     29.53,      23.97,          5.10,     782.76, 50000000, 0.48, 1.00, 5.53 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    46.40, 5148.79,   13.63,      2226.70,     39.72,      32.32,          6.92,     927.97, 50000000, 0.43, 1.00, 5.55 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTLITTLEENDIAN=10000000
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     8.72, 4832.45,   92.71,      3117.16,     47.97,      36.09,          8.02,     872.33, 10000000, 0.65, 1.00, 5.54 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     9.52, 5284.75,   13.29,      2549.78,     32.23,      25.47,          5.68,     951.51, 10000000, 0.48, 1.00, 5.55 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     8.69, 4826.32,   12.19,      2456.78,     38.14,      29.34,          6.61,     869.40, 10000000, 0.51, 1.00, 5.55 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTLITTLEENDIAN=20000000
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    17.88, 4938.67,   93.27,      3002.05,     49.05,      37.69,          8.52,     893.95, 20000000, 0.61, 1.00, 5.52 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    17.51, 4839.26,   12.59,      2311.71,     31.09,      25.01,          6.07,     875.26, 20000000, 0.48, 1.00, 5.53 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    17.49, 4834.25,   12.89,      2332.31,     38.63,      30.59,          7.01,     874.43, 20000000, 0.48, 1.00, 5.53 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTRANDOM=10000000 INTRANDOMSEED=30
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     7.60, 4196.62,   90.28,      2907.08,     47.31,      35.21,          8.11,     760.45, 10000000, 0.69, 1.00, 5.52 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     8.01, 4431.11,   11.11,      2321.60,     29.48,      22.45,          6.18,     801.42, 10000000, 0.52, 1.00, 5.53 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     7.75, 4286.17,   10.95,      2282.56,     37.13,      28.25,          6.73,     775.45, 10000000, 0.53, 1.00, 5.53 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTRANDOM=20000000 INTRANDOMSEED=30
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    17.46, 4822.84,   92.11,      2985.33,     49.22,      37.55,          8.70,     872.86, 20000000, 0.62, 1.00, 5.53 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    17.52, 4842.91,   12.28,      2356.16,     30.95,      24.58,          6.73,     875.94, 20000000, 0.49, 1.00, 5.53 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    17.20, 4754.00,   12.43,      2320.70,     38.62,      30.36,          7.33,     859.96, 20000000, 0.49, 1.00, 5.53 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTRANDOM=10000000 INTRANDOMSEED=66
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     7.57, 4180.61,   90.82,      2886.50,     47.07,      35.28,          8.07,     757.28, 10000000, 0.69, 1.00, 5.52 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     7.93, 4382.19,   11.18,      2290.72,     28.98,      22.46,          6.14,     792.58, 10000000, 0.52, 1.00, 5.53 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     7.70, 4256.97,   10.95,      2251.52,     36.59,      28.30,          6.67,     770.13, 10000000, 0.53, 1.00, 5.53 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTRANDOM=20000000 INTRANDOMSEED=66
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    17.46, 4822.12,   91.68,      2971.83,     49.01,      37.58,          8.70,     872.72, 20000000, 0.62, 1.00, 5.53 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    17.51, 4840.68,   12.36,      2347.00,     30.47,      24.73,          6.72,     875.56, 20000000, 0.48, 1.00, 5.53 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    17.14, 4738.34,   12.44,      2311.98,     38.20,      30.61,          7.31,     857.16, 20000000, 0.49, 1.00, 5.53 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=100000 FALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.03, 1896.74,   78.11,      2936.00,     35.92,       8.87,          6.31,     349.57, 100000, 1.55, 1.00, 5.43 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.03, 1398.65,    4.02,      2125.85,     15.19,       4.33,          2.87,     256.61, 100000, 1.52, 1.00, 5.45 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.03, 1528.32,    4.36,      2202.45,     27.89,       8.94,          4.65,     279.78, 100000, 1.44, 1.00, 5.46 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=100000 FALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.04, 2051.42,   54.56,      3173.95,     35.39,       6.89,          5.81,     378.40, 100000, 1.55, 1.00, 5.42 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.02, 1332.57,    3.63,      2035.38,     14.25,       3.79,          2.68,     244.40, 100000, 1.53, 1.00, 5.45 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.03, 1419.84,    3.80,      2041.84,     23.08,       5.32,          4.28,     260.10, 100000, 1.44, 1.00, 5.46 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=100000 FALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.03, 1706.22,   27.62,      2709.47,     31.19,       2.75,          4.32,     315.01, 100000, 1.59, 1.00, 5.42 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.02, 1069.46,    2.78,      1770.84,     11.73,       2.14,          1.95,     196.26, 100000, 1.66, 1.00, 5.45 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.02, 961.73,    2.88,      1459.05,     11.83,       1.79,          2.78,     176.30, 100000, 1.52, 1.00, 5.46 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=100000 FALSHAPE=150
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.02, 1020.41,   12.24,      1798.58,     14.82,       1.63,          3.03,     188.80, 100000, 1.76, 1.00, 5.40 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.02, 816.02,    2.43,      1433.14,      6.13,       1.53,          1.57,     150.28, 100000, 1.76, 1.00, 5.43 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.01, 557.29,    1.69,       871.25,      4.87,       1.08,          1.62,     102.51, 100000, 1.56, 1.00, 5.44 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=1000000 FALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.45, 2454.26,   88.18,      2896.92,     43.16,      25.87,          6.88,     448.33, 1000000, 1.18, 1.00, 5.47 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.37, 2038.08,    5.46,      2179.28,     21.19,      12.34,          3.41,     370.31, 1000000, 1.07, 1.00, 5.50 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.40, 2205.85,    5.87,      2283.01,     31.27,      20.37,          4.85,     401.00, 1000000, 1.03, 1.00, 5.50 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=1000000 FALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.25, 1356.96,   10.63,      2001.26,     31.97,       4.44,          3.01,     248.78, 1000000, 1.47, 1.00, 5.45 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.17, 947.59,    2.53,      1435.11,     11.43,       2.83,          1.53,     172.98, 1000000, 1.51, 1.00, 5.48 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.12, 639.65,    1.77,       855.87,      6.15,       2.23,          1.52,     116.79, 1000000, 1.34, 1.00, 5.48 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=1000000 FALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.21, 1126.50,    6.05,      1667.78,     15.75,       2.28,          2.59,     206.56, 1000000, 1.48, 1.00, 5.45 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.15, 818.03,    2.16,      1350.67,      6.82,       1.94,          1.48,     149.95, 1000000, 1.65, 1.00, 5.46 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.08, 458.63,    1.31,       674.68,      3.36,       1.46,          1.17,      84.10, 1000000, 1.47, 1.00, 5.45 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=1000000 FALSHAPE=150
PerformanceTestStandard START
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.16, 869.79,    3.52,      1421.07,      5.48,       1.33,          1.15,     159.54, 1000000, 1.63, 1.00, 5.45 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.10, 564.79,    1.50,      1047.15,      2.36,       1.23,          0.57,     103.53, 1000000, 1.85, 1.00, 5.46 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.04, 216.98,    0.63,       352.02,      1.87,       1.16,          0.25,      39.79, 1000000, 1.62, 1.00, 5.45 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=10000000 FALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     6.14, 3375.97,   38.68,      2829.09,     45.40,      32.93,          6.15,     613.70, 10000000, 0.84, 1.00, 5.50 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     5.01, 2757.70,    7.24,      2243.79,     23.25,      15.48,          3.77,     500.48, 10000000, 0.81, 1.00, 5.51 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     4.53, 2497.96,    6.55,      1994.20,     23.25,      14.81,          4.88,     453.32, 10000000, 0.80, 1.00, 5.51 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=10000000 FALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     2.35, 1286.63,    4.23,      1638.72,     15.28,       3.07,          2.40,     234.81, 10000000, 1.27, 1.00, 5.48 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     1.99, 1093.16,    2.76,      1287.87,      6.37,       2.62,          1.56,     198.65, 10000000, 1.18, 1.00, 5.50 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     1.32, 727.13,    1.89,       585.28,      2.52,       1.90,          1.15,     132.12, 10000000, 0.80, 1.00, 5.50 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=10000000 FALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     1.95, 1068.75,    3.09,      1393.42,      5.16,       1.96,          0.85,     195.02, 10000000, 1.30, 1.00, 5.48 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     1.65, 908.17,    2.29,      1141.14,      2.45,       1.83,          0.44,     164.99, 10000000, 1.26, 1.00, 5.50 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     1.00, 552.45,    1.47,       410.74,      1.72,       1.71,          0.21,      99.92, 10000000, 0.74, 1.00, 5.53 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=10000000 FALSHAPE=150
PerformanceTestStandard START
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     1.53, 840.12,    2.30,      1040.39,      3.77,       1.74,          0.49,     153.34, 10000000, 1.24, 1.00, 5.48 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     1.20, 661.61,    1.73,       727.62,      1.68,       1.68,          0.45,     120.21, 10000000, 1.10, 1.00, 5.50 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.62, 340.09,    0.90,       291.39,      1.51,       1.61,          0.04,      61.75, 10000000, 0.86, 1.00, 5.51 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=20000000 FALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    11.20, 3080.57,   25.27,      2654.71,     45.66,      32.74,          5.53,     559.94, 20000000, 0.86, 1.00, 5.50 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     9.41, 2588.51,    6.86,      2153.20,     22.60,      15.00,          3.61,     470.27, 20000000, 0.83, 1.00, 5.50 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     7.48, 2058.39,    5.47,      1730.21,     18.54,      10.81,          4.18,     373.98, 20000000, 0.84, 1.00, 5.50 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=20000000 FALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     4.67, 1277.96,    3.66,      1747.94,     10.39,       2.64,          2.01,     233.24, 20000000, 1.37, 1.00, 5.48 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     3.70, 1017.54,    2.54,      1206.61,      4.36,       2.32,          1.01,     184.87, 20000000, 1.19, 1.00, 5.50 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     2.26, 623.74,    1.64,       477.59,      2.04,       1.97,          0.64,     113.13, 20000000, 0.77, 1.00, 5.51 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=20000000 FALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     3.84, 1052.17,    2.82,      1337.37,      4.05,       2.05,          0.72,     192.03, 20000000, 1.27, 1.00, 5.48 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     3.25, 894.98,    2.20,      1068.05,      1.97,       1.95,          0.49,     162.60, 20000000, 1.19, 1.00, 5.50 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     2.05, 565.92,    1.44,       390.42,      1.56,       1.86,          0.12,     102.36, 20000000, 0.69, 1.00, 5.53 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=20000000 FALSHAPE=150
PerformanceTestStandard START
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     3.07, 842.00,    2.28,      1014.64,      3.30,       1.91,          0.31,     153.61, 20000000, 1.21, 1.00, 5.48 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     2.35, 646.56,    1.68,       673.57,      1.58,       1.86,          0.23,     117.48, 20000000, 1.04, 1.00, 5.50 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     1.26, 346.88,    0.92,       287.43,      1.47,       1.79,          0.04,      62.82, 20000000, 0.83, 1.00, 5.52 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=50000000 FALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    25.41, 2809.18,   15.13,      2416.96,     45.29,      31.83,          4.98,     508.25, 50000000, 0.86, 1.00, 5.53 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    19.76, 2184.65,    5.66,      1817.32,     22.16,      14.14,          3.39,     395.15, 50000000, 0.83, 1.00, 5.53 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    13.31, 1469.05,    3.76,      1249.20,     15.18,       7.51,          3.43,     266.25, 50000000, 0.85, 1.00, 5.52 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=50000000 FALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    11.00, 1211.17,    3.19,      1610.04,      7.07,       2.49,          1.36,     220.05, 50000000, 1.33, 1.00, 5.50 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     9.00, 995.43,    2.42,      1175.76,      2.96,       2.30,          0.65,     180.05, 50000000, 1.18, 1.00, 5.53 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     5.61, 621.65,    1.55,       436.63,      1.71,       2.06,          0.39,     112.11, 50000000, 0.70, 1.00, 5.54 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=50000000 FALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     9.31, 1024.31,    2.65,      1228.76,      4.49,       2.15,          1.04,     186.09, 50000000, 1.20, 1.00, 5.50 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     7.76, 857.22,    2.13,       948.27,      1.78,       2.08,          0.73,     155.11, 50000000, 1.11, 1.00, 5.53 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     5.26, 584.09,    1.49,       379.83,      1.50,       2.01,          0.06,     105.17, 50000000, 0.65, 1.00, 5.55 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTFAL=50000000 FALSHAPE=150
PerformanceTestStandard START
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     7.61, 840.81,    2.21,       968.59,      3.09,       2.05,          0.13,     152.09, 50000000, 1.15, 1.00, 5.53 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     5.84, 648.60,    1.70,       641.35,      1.51,       2.01,          0.10,     116.82, 50000000, 0.99, 1.00, 5.55 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     3.22, 357.34,    0.97,       284.67,      1.44,       1.95,          0.03,      64.34, 50000000, 0.80, 1.00, 5.55 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=100000 CFALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.03, 1552.18,   76.46,      2504.61,     35.01,       8.94,          6.17,     284.97, 100000, 1.61, 1.00, 5.45 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.02, 1146.60,    3.57,      1826.21,     15.38,       4.32,          2.68,     209.47, 100000, 1.59, 1.00, 5.47 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.02, 1277.03,    3.95,      1910.25,     26.82,       8.96,          4.44,     233.00, 100000, 1.50, 1.00, 5.48 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=100000 CFALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.03, 1609.85,   68.70,      2658.73,     37.20,       8.70,          6.25,     295.91, 100000, 1.65, 1.00, 5.44 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.02, 1247.69,    3.74,      1936.91,     16.41,       4.41,          2.67,     227.98, 100000, 1.55, 1.00, 5.47 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.02, 1366.40,    3.86,      2016.69,     28.67,       8.63,          4.41,     249.43, 100000, 1.48, 1.00, 5.48 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=100000 CFALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.03, 1687.86,   68.17,      2792.32,     35.94,       8.69,          6.32,     309.93, 100000, 1.65, 1.00, 5.45 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.02, 1300.52,    3.74,      2025.23,     15.28,       4.39,          2.63,     237.51, 100000, 1.56, 1.00, 5.48 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.03, 1421.72,    4.09,      2107.08,     27.04,       8.47,          4.35,     259.43, 100000, 1.48, 1.00, 5.48 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=100000 CFALSHAPE=150
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.03, 1813.87,   67.45,      2930.18,     35.73,       8.77,          6.36,     333.07, 100000, 1.62, 1.00, 5.45 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.03, 1382.99,    3.76,      2084.82,     15.61,       4.54,          2.99,     252.50, 100000, 1.51, 1.00, 5.48 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,  scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.03, 1518.19,    4.29,      2187.12,     27.80,       8.43,          4.60,     276.73, 100000, 1.44, 1.00, 5.49 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=1000000 CFALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.41, 2242.75,   91.45,      2806.51,     42.36,      25.47,          6.74,     407.78, 1000000, 1.25, 1.00, 5.50 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.36, 1974.39,    5.03,      2155.15,     21.86,      12.45,          3.01,     357.10, 1000000, 1.09, 1.00, 5.53 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.39, 2138.07,    5.51,      2263.04,     31.79,      20.21,          4.44,     386.76, 1000000, 1.06, 1.00, 5.53 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=1000000 CFALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.42, 2302.56,   88.11,      2873.96,     42.61,      25.53,          6.92,     418.68, 1000000, 1.25, 1.00, 5.50 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.37, 2037.17,    5.21,      2213.40,     21.91,      12.47,          3.45,     368.48, 1000000, 1.09, 1.00, 5.53 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.40, 2225.58,    5.73,      2339.18,     31.95,      20.24,          5.04,     402.60, 1000000, 1.05, 1.00, 5.53 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=1000000 CFALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.43, 2350.06,   83.64,      2861.60,     43.10,      25.70,          7.11,     427.26, 1000000, 1.22, 1.00, 5.50 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.36, 2000.06,    5.40,      2134.60,     21.34,      12.25,          3.27,     361.76, 1000000, 1.07, 1.00, 5.53 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.40, 2230.08,    5.88,      2269.30,     31.41,      20.28,          5.02,     403.39, 1000000, 1.02, 1.00, 5.53 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=1000000 CFALSHAPE=150
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     0.45, 2479.98,   84.85,      2933.06,     43.58,      25.88,          6.98,     450.77, 1000000, 1.18, 1.00, 5.50 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     0.38, 2079.30,    5.46,      2209.84,     21.50,      12.13,          3.40,     376.48, 1000000, 1.06, 1.00, 5.52 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,   scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     0.42, 2296.54,    6.01,      2352.65,     31.64,      20.44,          5.17,     415.41, 1000000, 1.02, 1.00, 5.53 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=10000000 CFALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     7.49, 4155.92,   89.74,      3032.39,     47.86,      34.87,          7.70,     749.14, 10000000, 0.73, 1.00, 5.55 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     6.52, 3622.42,    9.00,      2174.00,     27.37,      19.91,          4.46,     652.23, 10000000, 0.60, 1.00, 5.55 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     7.67, 4260.13,   10.66,      2323.42,     37.41,      28.22,          6.21,     767.25, 10000000, 0.55, 1.00, 5.55 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=10000000 CFALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     7.91, 4390.61,   89.42,      3114.66,     48.17,      35.25,          7.97,     791.29, 10000000, 0.71, 1.00, 5.55 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     6.61, 3668.30,    9.30,      2241.34,     27.72,      19.62,          4.16,     660.52, 10000000, 0.61, 1.00, 5.55 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     8.02, 4451.25,   11.36,      2389.08,     38.36,      28.27,          5.97,     801.48, 10000000, 0.54, 1.00, 5.55 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=10000000 CFALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     8.24, 4573.16,   90.68,      3299.30,     48.41,      35.40,          8.01,     824.05, 10000000, 0.72, 1.00, 5.55 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     6.73, 3738.35,    9.39,      2304.85,     27.82,      19.60,          4.39,     673.13, 10000000, 0.62, 1.00, 5.55 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     8.17, 4537.81,   11.44,      2452.99,     38.73,      28.32,          6.27,     817.20, 10000000, 0.54, 1.00, 5.55 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=10000000 CFALSHAPE=150
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     2.10, 1158.27,   13.06,      1524.72,      8.73,       5.46,          1.10,     210.24, 10000000, 1.32, 1.00, 5.51 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     1.66, 919.96,    2.37,       927.03,      4.23,       3.41,          0.61,     166.28, 10000000, 1.01, 1.00, 5.53 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     1.68, 929.09,    2.43,       877.63,      5.59,       4.49,          0.84,     167.56, 10000000, 0.94, 1.00, 5.54 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=20000000 CFALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    17.08, 4739.56,   93.17,      3067.83,     49.15,      37.27,          8.25,     853.73, 20000000, 0.65, 1.00, 5.55 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    14.59, 4052.07,   10.39,      2229.25,     28.78,      22.03,          4.88,     729.67, 20000000, 0.55, 1.00, 5.55 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    16.97, 4716.71,   12.41,      2377.85,     38.70,      30.14,          6.71,     848.45, 20000000, 0.50, 1.00, 5.56 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=20000000 CFALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    17.69, 4909.40,   92.48,      3165.52,     51.86,      37.56,          8.13,     884.28, 20000000, 0.64, 1.00, 5.55 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    14.85, 4127.28,   10.39,      2298.02,     29.48,      22.11,          4.24,     742.59, 20000000, 0.56, 1.00, 5.56 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    17.19, 4781.62,   12.22,      2444.87,     39.31,      30.24,          6.03,     859.38, 20000000, 0.51, 1.00, 5.56 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=20000000 CFALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    13.19, 3659.30,   64.06,      2648.74,     39.17,      26.69,          6.05,     659.38, 20000000, 0.72, 1.00, 5.55 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    10.78, 2993.13,    7.67,      1799.31,     21.16,      15.31,          3.68,     538.95, 20000000, 0.60, 1.00, 5.55 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    12.51, 3473.94,    8.97,      1878.34,     28.70,      21.32,          4.97,     625.66, 20000000, 0.54, 1.00, 5.55 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=20000000 CFALSHAPE=150
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     3.81, 1046.00,    8.07,      1384.86,      7.39,       3.87,          0.59,     190.31, 20000000, 1.32, 1.00, 5.50 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     2.92, 806.84,    2.11,       819.51,      2.87,       2.80,          0.32,     146.00, 20000000, 1.02, 1.00, 5.53 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     2.92, 807.96,    2.10,       753.48,      3.53,       3.31,          0.44,     146.14, 20000000, 0.93, 1.00, 5.53 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=50000000 CFALSHAPE=50
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    48.38, 5371.47,   88.65,      3104.08,     51.23,      40.02,          8.54,     967.63, 50000000, 0.58, 1.00, 5.55 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    40.14, 4457.99,   11.47,      2324.21,     30.11,      24.14,          4.45,     802.74, 50000000, 0.52, 1.00, 5.55 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    47.46, 5270.28,   13.56,      2475.36,     40.18,      32.38,          6.35,     949.15, 50000000, 0.47, 1.00, 5.55 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=50000000 CFALSHAPE=105
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    49.57, 5490.89,   89.16,      3187.47,     52.37,      40.43,          8.25,     991.40, 50000000, 0.58, 1.00, 5.54 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    41.12, 4465.07,   10.95,      2374.92,     30.65,      24.13,          4.33,     822.44, 50000000, 0.53, 1.00, 5.43 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    48.41, 5277.27,   14.19,      2526.27,     40.74,      32.49,          6.21,     968.09, 50000000, 0.48, 1.00, 5.45 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=50000000 CFALSHAPE=125
PerformanceTestStandard START
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),    19.05, 2068.00,   27.06,      1956.31,     20.57,      12.10,          2.56,     380.99, 50000000, 0.95, 1.00, 5.43 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),    15.08, 1638.03,    4.62,      1216.39,      9.52,       7.48,          1.52,     301.66, 50000000, 0.74, 1.00, 5.43 
                      name, time sec,  cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),    16.53, 1807.20,    4.91,      1202.01,     12.52,       9.84,          2.02,     330.53, 50000000, 0.67, 1.00, 5.47 
PerformanceTestStandard END


PERFORMANCETESTS on AdaptiveSearch Btree with CONTENT_SIZE = 4000
DATATYPE: INTCFAL=50000000 CFALSHAPE=150
PerformanceTestStandard START
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
insert AdaptiveSearch (AS),     8.91, 970.52,    4.68,      1287.40,      5.51,       2.90,          0.27,     178.15, 50000000, 1.33, 1.00, 5.45 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
lookup AdaptiveSearch (AS),     6.74, 733.96,    1.98,       753.45,      2.05,       2.44,          0.14,     134.74, 50000000, 1.03, 1.00, 5.45 
                      name, time sec, cycles, kcycles, instructions, L1-misses, LLC-misses, branch-misses, task-clock,    scale,  IPC, CPUs,  GHz 
remove AdaptiveSearch (AS),     6.62, 721.80,    2.09,       681.58,      2.33,       2.65,          0.19,     132.35, 50000000, 0.94, 1.00, 5.45 
PerformanceTestStandard END

